<?php

namespace Ginger\Core\Cqrs\Bus;

use Ginger\Test\Mock\Core\EventListener;
use Ginger\Test\Mock\Core\CheckEventPublishedEvent;
use Ginger\Test\Mock\Core\AsyncPhpResqueEventBus;
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-11-10 at 00:12:56.
 */
class AsyncPhpResqueEventBusTest extends \PHPUnit_Framework_TestCase
{
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->serviceManager = \Ginger\Core\Bootstrap::getServiceManager();
        
        $gate = $this->serviceManager->get('cqrs.gate');
        
        $asyncBus = $gate->getBus(\Ginger\Core\Definition::ASYNC_EVENT_BUS);
        
        $gate->detach($asyncBus);
        
        //Attach mocked async bus to make sure that Ginger\Core is bootstraped with
        //activateTestEnv flag set to true, when the background work invokes the bus
        $mockedAsyncBus = new AsyncPhpResqueEventBus();
        
        $gate->attach($mockedAsyncBus);
        
        $this->worker = new \Resque_Worker(array(\Ginger\Core\Definition::ASYNC_EVENT_QUEUE));
        
        EventListener::reset();
    }

    /**
     * @covers Ginger\Core\Cqrs\Bus\AsyncPhpResqueEventBus::publishEvent
     */
    public function testPublishEvent()
    {
        $checkPayload = array('check event args');
        $checkId = 2;
        $checkTime = 1000100;
        $checkVersion = 1.3;
        
        $event = new CheckEventPublishedEvent($checkPayload, $checkId, $checkTime, $checkVersion);

        $eventListener = new EventListener();
        
        $this->serviceManager->get('cqrs.gate')
            ->getBus(\Ginger\Core\Definition::ASYNC_EVENT_BUS)
            ->publishEvent($event);
        
        $this->worker->work(0);
        
        $this->assertTrue(
            $eventListener->isEventPublished(), 
            'tests/PHPUnit/Ginger/Test/Mock/Core/touch-file.txt is not removed. Maybe the event args did not match?'
        );
    }
}
